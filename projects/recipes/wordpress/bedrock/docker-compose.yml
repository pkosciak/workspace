services:
    php:
        container_name: ${APP_NAME}-php
        build:
            context: .
            dockerfile: Dockerfile
        networks:
            - proxy
        volumes:
            - ./src:/var/www/html
            - ./.docker/php/php.ini:/usr/local/etc/php/php.ini
            - ./.docker/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ./.docker/php/logs:/var/log
            - ./.docker/xdebug/logs/xdebug.log:/var/log/xdebug.log
            - ./.docker/xdebug/profile:/tmp/xdebug/profile
            - ./.docker/xdebug/trace:/tmp/xdebug/trace
            - ./.docker/xdebug/coverage:/tmp/xdebug/coverage

    nginx:
        container_name: ${APP_NAME}-nginx
        image: nginx:stable-alpine
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"

            # HTTP
            - "traefik.http.routers.${APP_NAME}-http.rule=Host(`${APP_NAME}.test`)"
#            - "traefik.http.routers.${APP_NAME}-http.rule=Host(`${APP_NAME}.test`) || Host(`subdomain1.${APP_NAME}.test`) || Host(`subdomain2.${APP_NAME}.test`)"
            - "traefik.http.routers.${APP_NAME}-http.entrypoints=web"
            - "traefik.http.routers.${APP_NAME}-http.middlewares=redirect-to-https"
            - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

            # HTTPS
            - "traefik.http.routers.${APP_NAME}.rule=Host(`${APP_NAME}.test`)"
#            - "traefik.http.routers.${APP_NAME}.rule=Host(`${APP_NAME}.test`) || Host(`subdomain1.${APP_NAME}.test`) || Host(`subdomain2.${APP_NAME}.test`)"
            - "traefik.http.routers.${APP_NAME}.entrypoints=websecure"
            - "traefik.http.routers.${APP_NAME}.tls=true"
        networks:
            - proxy
        volumes:
            - ./src:/var/www/html
            - ./.docker/php/ini/php.ini:/usr/local/etc/php/php.ini
            - ./.docker/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ./.docker/php/logs:/var/log
            - ./.docker/php/pool.d:/usr/local/etc/php-fpm.d
            - ./.docker/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
        environment:
            APP_NAME: ${APP_NAME}

#    httpd:
#        container_name: ${APP_NAME}-httpd
#        image: httpd:latest
#        networks:
#            - proxy
#        volumes:
#            - ./src:/var/www/html
#            - ./.docker/httpd/conf/httpd.conf:/usr/local/apache2/conf/httpd.conf
#            - ./.docker/httpd/conf/sites-enabled:/usr/local/apache2/sites-enabled
#            - ./.docker/httpd/logs:/usr/local/apache2/logs
#        labels:
#            - "traefik.enable=true"
#            - "traefik.docker.network=proxy"
#
#            # HTTP
#            - "traefik.http.routers.${APP_NAME}-http.rule=Host(`${APP_NAME}.test`)"
##            - "traefik.http.routers.${APP_NAME}-http.rule=Host(`${APP_NAME}.test`) || Host(`subdomain1.${APP_NAME}.test`) || Host(`subdomain2.${APP_NAME}.test`)"
#            - "traefik.http.routers.${APP_NAME}-http.entrypoints=web"
#            - "traefik.http.routers.${APP_NAME}-http.middlewares=redirect-to-https"
#            - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
#
#            # HTTPS
#            - "traefik.http.routers.${APP_NAME}.rule=Host(`${APP_NAME}.test`)"
##            - "traefik.http.routers.${APP_NAME}.rule=Host(`${APP_NAME}.test`) || Host(`subdomain1.${APP_NAME}.test`) || Host(`subdomain2.${APP_NAME}.test`)"
#            - "traefik.http.routers.${APP_NAME}.entrypoints=websecure"
#            - "traefik.http.routers.${APP_NAME}.tls=true"
#        environment:
#            APP_NAME: ${APP_NAME}

#    mysql:
#        container_name: ${APP_NAME}-mysql
#        image: mysql:8
#        volumes:
#            - ./.docker/mysql/data:/var/lib/mysql
#            - ./.docker/mysql/dumps:/home/dumps
#            - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
#            - ./.docker/mysql/logs/slow-query.log:/var/log/mysql/slow-query.log
#        networks:
#            - proxy
#        environment:
#            MYSQL_ROOT_PASSWORD: root
#        ports:
#            - ${DB_PORT}:3306

networks:
    proxy:
        external: true